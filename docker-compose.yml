services:
  dbserver:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - "~/distribuida:/var/lib/postgresql/data/pgdata"
    ports:
      - "54321:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  consul:
    image: consul:1.15.4
    command: agent -dev -ui -bind=0.0.0.0 -client=0.0.0.0
    ports:
      - "8500:8500"
    expose:
      - 8500
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5

  proxy:
    image: traefik:3.0.4
    command:
      - "--api.insecure=true"
      - "--providers.consulCatalog=true"
      - "--providers.consulCatalog.exposedByDefault=false"
      - "--providers.consulCatalog.endpoint.address=consul:8500"
      - "--providers.consulCatalog.refreshInterval=10s"
      - "--providers.consulcatalog.prefix=traefik"
    ports:
      - "8080:8080"
      - "7070:80"
    expose:
      - 80
    depends_on:
      consul:
        condition: service_healthy

  authors-service:
    image: app-authors-spring
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://dbserver:5432/distribuida
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SERVER_PORT: 9090
    depends_on:
      dbserver:
        condition: service_healthy
      consul:
        condition: service_healthy
    ports:
      - "9090:9090"
    expose:
      - 9089
    deploy:
      replicas: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  books-service:
    image: app-books-spring
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://dbserver:5432/distribuida
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_CLOUD_CONSUL_PORT: 8500
      SERVER_PORT: 8090
    depends_on:
      dbserver:
        condition: service_healthy
      consul:
        condition: service_healthy
    ports:
      - "8090:8090"
    expose:
      - 8089
    deploy:
      replicas: 1
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8090/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
